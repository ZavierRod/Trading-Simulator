services: # this is the container that makes up our app
  db: # separate container that will network together with the other containers
    image: postgres:15-alpine
    environment: # bootstrap a database called trade with user and password
      POSTGRES_USER: trade_user
      POSTGRES_PASSWORD: trade_password
      POSTGRES_DB: trade
    volumes: # attaches a volume named db_data to Postgres' data directory
      - db_data:/var/lib/postgresql/data   # keeps data between restarts
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost']
      interval: 5s
      retries: 10
    ports: # mapping between the container port and our host machine's port
      - "5432:5432"

  backend:
    build: ./backend                       # Dockerfile lives in /backend
    command: uvicorn backend.app.main:app --host 0.0.0.0 --port 8000 #FastAPI listens on this port inside the container
    volumes:
      - ./backend:/app/backend
      - ./sandbox_runner:/app/sandbox_runner
      - ./data:/data
      - ./data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock # host socket
      - ./sandbox_runner/runner.py:/app/runner.py
    environment:
      DATABASE_URL: postgresql://trade_user:trade_password@db:5432/trade # db:5432 reaches Postgres
      POSTGRES_DB: trade
      DOCKER_HOST: unix:///var/run/docker.sock
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  runner:
    profiles: ["runner"]          # built but not started unless explicitly invoked
    build: ./sandbox_runner
    image: trading-simulation-game-runner:latest
    command: ["true"]
    volumes:
      - ./sandbox_runner:/app
      - ./data:/data

volumes:
  db_data:
